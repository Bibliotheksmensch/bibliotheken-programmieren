### Welcome to your project!

- Brush up on Markdown: http://daringfireball.net/projects/markdown/basics
- Learn about Penflip: [penflip.com/help](http://www.penflip.com/help)
- Talk to a person: support@penflip.com


## Sollten Bibliotheken progrommieren?

### Bibliothek und programmieren passt das?

Wenn man an programmieren denkt, kommt einem mit Sicherheit nicht als erstes eine Bibliothek in den Sinn, und doch programmieren genau diese. In erster Linie treiben große Einrichtungen diesen Trend voran, aber auch kleinere Bibliotheken beteiligen sich. Diese Entwicklung ist dabei durchaus auf die Geschichte der Bibliotheken zurück zu führen. Bibliotheken legten schon immer Wert darauf die vorhandenen Informationsressourcen selbst zu organisieren und zu präsentieren. In den Zeiten des Internets greiffen sie allerdings vermehrt auf die verlockenden Angebote kommerzieller Anbieter wie Ebsco, OCLC oder ProQuest zurück. ![](https://oclc.org/content/dam/oclc/common/images/logos/new/OCLC/OCLC_Logo_H_Color_NoTag.png) 
Dies ist zwar bequemer und die Bibliothekare können sich vermeindlich wichtigeren Bereichen widmen, doch werden sie auch zunehmend abhäniger. Hinzu kommt, dass der Auftritt der Bibliothek nicht mehr den veränderten Nutzeransprüchen entgegen kommt. Die Nutzer erwarten zunehmend Angebote des Web 2.0  zum Beispiel bei der Recherche im Katalog. Bibliotheken haben heute in der Regel drei Möglichkeiten. Sie könne auf Produkte kommerzieller Anbieter zurückgreifen, fertige Produkte selbst weiter entwickeln und anpassen oder eine eigene Software schreiben, die individuell abgestimmt ist. 

### Kommerzielle Software

Je nach größe und Umfang der Software müssen vor der Entscheidung für eine komerzielle Lösung  folgende Punkte bedacht werden:
- Kosten für die Anschaffung und Betrieb
- wird die Software Weiterentwickelt
- wer gehört zum Anwenderkreis
- können bestehende Dienste eingebunden werden

Insbesondere die hohen Anschaffungskosten stellen viele Bibliotheken die traditionell nach dem kamaralistischen System arbeiten vor große Probleme. 

### Komerzielle oder Open-Source-Softwareanwendungen, die angepasst werden

Es ist nicht unbedingt erforderlich die komplette Software selbst zu schreiben. Eine Möglichkeit ist vorhandene kommerzielle oder Open-Source -Software den eigenen Bedürfnissen anzupassen. Das Programm kann so auf die jeweilge Nutzergruppe zugeschnitten werden. Dies ist zum Beispiel sinnvoll bei der Navigation in den vielfältigen Informationsstrukturen. Wenn jeder Katalog und jede Datenbank eine anders aufgebaute Suchfunktion besitz kann dies schnell zu Frust auf Seiten der Nutzer führen. Ein gelungenes Beispiel für die Zusammenführung verschiedener Benutzeroberflächen ist die Homepage der Universität Köln und der Stadtbibliothek Köln. [Köln Homepage](https://www.ub.uni-koeln.de/) Hier wurden Benutzerkonten zusammen geführt, der Sucheinstieg vereinfacht und Web 2.0 Dienste integriert. Tipps zur aktuellen Recherche oder der Chatbot Albot helfen den Nutzern direkt weiter.

####VuFind

Eine weitere gelungene Anpassung ist die Suchoberfläche beluga [beluga](http://beluga.sub.uni-hamburg.de/vufind/). beluga basiert auf der Open-Source-Software VuFind, dass an der Falvey Memorial Library in den USA entwickelt wurde.![](http://t2.gstatic.com/images?q=tbn:ANd9GcQnMi2KDCv-mOSRtHjIDYRJkVHuX_TBWOOO-3fC_9OmY88UcwGZh4ZUFcDC) Die Suchoberfläche bei VuFind ähnelt der von Google. Die Treffer werden nach Relevanz sortiert. Eine Tefferliste zeigt zusätzlich an, in welchen Verzeichnissen etwas gefunden wurde. Bei der Eingabe schlägt VuFind weiter Facetten des Suchbegriffes vor. Auch diese Funktion erinnert stark an Google. VuFind kann zusätzlich zu den  Bibliotheksbeständen mit Wikipedia Einträgen oder Repositories angereichert werden.
VuFind selbst ist mit PHP programmiert. Als Suchmaschien verwendet VuFind Solr Energy. Besonders interessant für Bibliotheken sind die Permalinks für Katalogisate die VuFind unterstüzt.

Vor der Anschaffung einer Software, welche angapsst werden soll, sollte geklärt werden wie hoch der Aufwand für Anpassung und Pflege ist. In welcher Sprache wurde die Software programmiert? Gibt es Personal, dass die nötigen Anpassungen realisieren kann? Ein weiterer Punkt ist der mehr Aufwand. Die Mitarbeiter müssen nicht nur geschult werden, sondern gegeben falls auch mit der jeweiligen Programmiersprache vertraut gemacht werden. 

### Selbst programmierte Software

Eigene Software zu schreiben bedeutet Einfluss nehmen zu können. Es bedeutet allerdings auch, dass man mit Rückschlägen rechnen muss. Nicht alles klappt auf anhieb und einiges läßt sich vielleicht nicht realisieren. Es wird programmiert weil nicht das Richtige auf dem Markt angeboten wird oder eine kommerzielle vermarktung nicht lohnt. Bei der programmierung eigenen Software sollten daher folgendes bedacht werden:
- was soll die Software leisten
- wer verfügt über das nötige know how um die Software zu entwerfen
- Bestimmung von Administratoren
- was wird die Entwicklung am Ende kosten
- haben andere schon Erfahrungen gesammelt in dieser Richtung



 Doch in welchen Bereichen kann selbst programmiertes heute eingesetzt werden?







